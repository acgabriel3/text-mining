install.packages(c("data.table", "future.apply", "readtext", "tm", "udpipe"))
install.packages("pdftools")
install.packages(c("formattable", "ggridges", "lexiconPT", "readtext", "SnowballC", "stm", "tidytext", "tidyverse"))
install.packages(c("qdap", "wordcloud"))
install.packages(c("qdap", "wordcloud"))
install.packages('rJava')
install.packages('rJava')
install.packages('rJava')
install.packages('rJava')
install.packages(c("qdap", "wordcloud"))
install.packages(c("clue", "fpc", "ggthemes", "skmeans"))
install.packages("ggthemes")
install.packages("ggraph")
install.packages("qdap")
setwd("~/R_envs/text-mining/arquivo")
setwd("~/R_envs/text-mining")
file_conllu <- system.file(package = "udpipe", "dummydata", "pt_bosque-ud-train.conllu")
file_conllu
file_conllu <- "~/pt_bosque-ud-train.conllu"
cat(head(readLines(file_conllu), 3), sep="\n")
file_conllu <- "pt_bosque-ud-train.conllu"
cat(head(readLines(file_conllu), 3), sep="\n")
library(udpipe)
m <- udpipe_train(file = "lemmatizer_model.udpipe", files_conllu_training = file_conllu,
annotation_tokenizer = list(dimension = 16,
epochs = 1,
batch_size = 100,
dropout = 0.7),
annotation_tagger = list(guesser_suffix_rules_2 = 6,
guesser_enrich_dictionary_2 = 4,
guesser_prefixes_max_2 = 4,
use_lemma_2 = 1, use_xpostag_2 = 0,
use_feats_2 = 0,
provide_lemma_2 = 1,
provide_xpostag_2 = 0,
provide_feats_2 = 0,
prune_features_2 = 0),
annotation_parser = "none")
View(m)
library(stringr)
library(dplyr)
options(stringsAsFactors = F)
dados<-"dados/sbrt_txts/dossies"
txtdf<-readtext::readtext(dados, encoding = "latin1")
txtdf$text<-sub('.*\nConteúdo',"",txtdf$text)
txtdf$text<-sub('.*\nCONTEÚDO',"",txtdf$text)
txtdf$text<-sub('.*\nTítulo',"",txtdf$text)
txtdf$text<-gsub('[1-9][0-9]* Copyright © Serviço Brasileiro de Respostas Técnicas - SBRT - http://www.sbrt.ibict.br',"",txtdf$text)
txtdf$text<-gsub('[1-9][0-9]* Copyright © Serviço Brasileiro de Respostas Técnicas - SBRT - http://www.respostatecnica.org.br',"", txtdf$text)
txtdf$text<-gsub('[1-9][0-9]*\nCopyright © Serviço Brasileiro de Respostas Técnicas - SBRT - http://www.respostatecnica.org.br',"", txtdf$text)
txtdf$text<-gsub('\nCopyright © Serviço Brasileiro de Respostas Técnicas - SBRT - http://www.sbrt.ibict.br\n\n[1-9][0-9]*',"", txtdf$text)
txtdf$text<-gsub('Disponível em: ',"",txtdf$text)
txtdf$text<-gsub('www.+?br',"",txtdf$text)
txtdf$text<-str_replace_all(txtdf$text, "[^[:alnum:].:,?!;]", " ")
txtdf$text<-gsub("\\s+", " ", str_trim(txtdf$text))
txtdf$text<-gsub('Copyright Serviço Brasileiro de Respostas Técnicas SBRT http: www.respostatecnica.org.br [1-9][0-9]*',"",txtdf$text)
txtdf$text<-gsub('INTRODUÇÃO',"",txtdf$text)
txtdf$text<-gsub('Introdução',"",txtdf$text)
txtdf$text<- iconv(txtdf$text, from = "UTF-8", to = "ASCII//TRANSLIT")
txtdf$ID<-seq(1:nrow(txtdf))
library(udpipe)
library(data.table)
# returns a data.table
annotate_splits <- function(x, file) {
ud_model <- udpipe_load_model(file)
x <- as.data.table(udpipe_annotate(ud_model,
x = x$text,
doc_id = x$doc_id, parser = "none"))
return(x)
}
# load parallel library future.apply
library(future.apply)
# Define cores to be used
ncores <- 4L
plan(multiprocess, workers = ncores)
# split comments based on available cores
corpus_splitted <- split(txtdf, seq(1, nrow(txtdf), by = 10))
annotation <- future_lapply(corpus_splitted, annotate_splits, file = "lemmatizer_model.udpipe")
annotation <- rbindlist(annotation)
View(annotation)
install.packages("textrank")
library(pdftools)
library(pdftools)
pdf<-"/home/micael/R_envs/text-mining/dados/DT/10.pdf"
toc <- pdf_toc(pdf)
pdf<-"/home/micael/R_envs/text-mining/dados/DT/10.pdf"
pdf1<-"/home/micael/R_envs/text-mining/dados/DT/10.pdf"
toc <- pdf_toc(pdf1)
# Show as JSON
jsonlite::toJSON(toc, auto_unbox = TRUE, pretty = TRUE)
pdf1<-"/home/micael/R_envs/text-mining/dados/DT/104.pdf"
toc <- pdf_toc(pdf1)
info<-pdf_info(pdf1)
View(info)
info[["metadata"]]
pdf1<-"/home/micael/R_envs/text-mining/dados/DT/10.pdf"
info<-pdf_info(pdf1)
View(info)
info<-pdf_text(pdf1)
info
pdf1<-"/home/micael/R_envs/text-mining/dados/sbrt_txts/respostas/34639.txt"
info<-pdf_text(pdf1)
